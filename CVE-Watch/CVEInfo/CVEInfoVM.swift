//
//  CVEInfoVM.swift
//  CVE-Watch
//
//  Created by Niklas Demel on 16.11.23.
//

import Foundation
import Combine

class CVEInfoVM: ObservableObject {
    @Published var cves: [Cve] = []
    var modelInterface = ModelInterface()
    
    fileprivate var subscription : AnyCancellable! = nil
    
    func updateList(userInput: String) {
        Task {
            let fetch = await NetworkClerk().fetch(api: userInput)
            DispatchQueue.main.async {
                for vulnerability in fetch?.vulnerabilities ?? [] {
                    self.storeCve(vulnerability: vulnerability)
                    self.modelInterface.save()
                }
            }
        }
        
    }
    
    func update() {
        cves = modelInterface.getCveData()
    }
    
    func storeCve(vulnerability: Vulnerability?) {
        if(vulnerability?.cve != nil) {
            modelInterface.add(cve: vulnerability!.cve)
            cves = modelInterface.getCveData()
        }
    }
    
    func TEST_deleteAll() {
        modelInterface.delete()
        cves = modelInterface.getCveData()
    }
    
    
}
