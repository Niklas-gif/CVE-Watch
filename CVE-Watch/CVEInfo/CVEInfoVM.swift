//
//  CVEInfoVM.swift
//  CVE-Watch
//
//  Created by Niklas Demel on 16.11.23.
//

import Foundation

class CVEInfoVM: ObservableObject {
    @Published var uiTestdata = testData
    @Published var testFetchCVE: Vulnerability?
    
    
    func testFetch() {
        Task {
            
            let fetch = await ServerFetch().fetchCVE()
            
            DispatchQueue.main.async {
                self.testFetchCVE = fetch
                self.testAppend(vulnerability: fetch)
            }
        }
        
    }
    
    func updateList() {
        Task {
            let fetch = await ServerFetch().fetch(api: "")
            DispatchQueue.main.async {
                for vulnerability in fetch?.vulnerabilities ?? [] {
                    self.testAppend(vulnerability: vulnerability)
                    
                }
            }
        }
        
    }
    
    func testAppend(vulnerability: Vulnerability?) {
        let cve = vulnerability
        let test = CVETestData(
            CVEID: cve?.cve.id ?? "", // Provide a default value in case cve?.id is nil
            baseScore: cve?.metrics?.cvssMetricV31[0].cvssData.baseScore ?? 0.0, // Provide a default value for baseScore
            attackVector: cve?.metrics?.cvssMetricV31[0].cvssData.attackVector ?? "", // Provide a default value for attackVector
            description: cve?.cve.descriptions[0].value ?? ""
        )
        uiTestdata.append(test)
        
    }
}
