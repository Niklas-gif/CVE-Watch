//
//  CVEInfoView.swift
//  CVE-Watch
//
//  Created by Niklas Demel on 14.11.23.
//

import SwiftUI

struct CVEInfoView: View {
    @Environment(\.colorScheme) private var colorScheme
    @ObservedObject var vm = CVEInfoVM()
    @State var searchText = ""
    var body: some View {
        NavigationStack {
            ZStack {
                VStack {
                    VStack(alignment:.leading) {
                        Text("Overview").padding(.horizontal).font(.largeTitle).bold()
                        TextField(
                            "CVE-Search", text: $searchText)
                        Spacer()
                        List {
                            ForEach($vm.cves) {data in
                                NavigationLink(destination: CVEDetailsView(displayData: data)) {
                                    CVEListItem(displayData: data)
                                }
                                
                            }
                        }.scrollContentBackground(colorScheme == .dark ? .hidden : .visible)
                    }.onAppear(perform: {
                        vm.update()
                    })
                    HStack(alignment: .center,spacing: 20) {
                        Spacer()
                        Group(){
                            Button("Fetch") {
                                vm.updateList(userInput: searchText)
                            }
                            Button("Delete") {
                                vm.TEST_deleteAll()
                            }
                            Button("Update") {
                                vm.update()
                            }
                        }.padding(10).foregroundStyle(.foreground).background(.gray.opacity(0.3)).clipShape(.capsule)
                        Spacer()
                    }
                        Spacer()
                }.background(Color.cveBackground)
            }
        }
    }
}



#Preview {
    CVEInfoView()
}

struct CVEListItem: View {
    @Binding var displayData: Cve
    var body: some View {
        HStack() {
            Text("\(displayData.metrics?.cvssMetricV31?[0].cvssData.baseScore ?? 0.0, specifier: "%.2f")").padding(20).background(.red).scaledToFit().clipShape(Circle())
            Spacer()
            Text(displayData.id)
                .font(.title3)
                .bold()
        }
        .padding()
        .clipShape(.buttonBorder)
    }
}
