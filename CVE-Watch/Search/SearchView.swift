//
//  SearchView.swift
//  CVE-Watch
//
//  Created by Niklas Demel on 04.12.23.
//

import SwiftUI



struct SearchView: View {
    @ObservedObject var vm = SearchVM()
    @State var searchText = ""
    @State var searchIsvisible = false
    @State var isSelected = false
    @State var searchSetting = Searchtype.CVEid
    
    var body: some View {
        NavigationStack {
            ZStack{
                Color.cveBackground.ignoresSafeArea()
                VStack {
                    /*TextField(
                        "CVE-Search", text: $searchText
                    )
                    .textFieldStyle(.roundedBorder)
                    .padding()*/
                    SearchOptions(searchSetting: $searchSetting).padding()
                    Button(action: {vm.fetch(userInput: searchText, searchtypte: searchSetting)}, label: {
                        Text("Submit")
                    })
                    FloatingActionButton(vm: vm, userInput: $searchText, searchtype: $searchSetting)
                    
                }
               
            }.navigationTitle("Search")
        }
        .searchable(text: $searchText, isPresented: $searchIsvisible)
            .onSubmit(of:.search) {
            print(searchText)
            vm.fetch(userInput: searchText, searchtypte: searchSetting)
        }
    }
}

#Preview {
    SearchView()
}

struct SearchOptions: View {
    @Binding var searchSetting: Searchtype
    var body: some View {
        ScrollView(.horizontal) {
            HStack(alignment: .center,spacing: 10) {
                Group {
                    Button(action: {
                        searchSetting = Searchtype.CVEid
                    }, label: {
                        HStack {
                            Text("ID")
                            Image(systemName: "tray.circle")
                        }
                    }
                    ).foregroundStyle(searchSetting == .CVEid ? Color.accentColor : Color.white)
                    Button(action: {
                        searchSetting = Searchtype.Keyword
                    }, label: {
                        HStack {
                            Text("Description")
                            Image(systemName: "info.bubble")
                        }
                    }
                    ).foregroundStyle(searchSetting == .Keyword ? Color.accentColor : Color.white)
                    Button (action: {
                        searchSetting = Searchtype.Date
                    }, label: {
                        HStack {
                            Text("Date")
                            Image(systemName: "calendar")
                        }
                    }
                    ).foregroundStyle(searchSetting == .Date ? Color.accentColor : Color.white)
                }.padding(10).foregroundStyle(Color.white).fontWeight(.bold).background(Color.black).clipShape(.buttonBorder)
            }
        }
    }
}
