//
//  SearchView.swift
//  CVE-Watch
//
//  Created by Niklas Demel on 04.12.23.
//

import SwiftUI



struct SearchView: View {
    @ObservedObject var vm = SearchVM()
    @State var searchText = ""
    @State var searchIsvisible = false
    @State var searchSetting = Searchtype.CVEid
    @State var navLinkVisible = false
    @State var placeholder = "CVE-ID"
    @State var hideToolbar = false
    @State var isHidden = false
    
    var body: some View {
        NavigationStack {
            ZStack {
                Color.cveBackground.ignoresSafeArea()
                VStack(alignment: .leading) {
                    if !hideToolbar {
                        Group {
                            SearchOptions(searchSetting: $searchSetting,
                                          placeholder: $placeholder)
                            .padding()
                            SearchField(vm: vm, searchText: $searchText,
                                        searchSetting: $searchSetting,
                                        placeholder: $placeholder)
                        }.onChange(of: vm.cves.count, {
                            if !hideToolbar && vm.cves.count > 0 {
                                withAnimation {
                                    hideToolbar.toggle()
                                }
                            }
                        })
                    }
                    Text("Found: \(vm.cves.count) vulnerbalities")
                        .padding(.horizontal)
                    if vm.cves.count != 0 {
                        HStack {
                            Button(
                                action: {vm.storeCves()},
                                label: {Text("Save")})
                            Spacer()
                            Button(
                                action: {vm.toggleAll()},
                                label: {Text("Selected all")})
                        }.padding(.horizontal)
                        ZStack {
                            List {
                                ForEach(vm.cves) {data in
                                    HStack {
                                        Text(data.cve.id)
                                        Spacer()
                                        Button(
                                            action: {
                                                vm.toggle(id: data.id)
                                            },
                                            label: {
                                                Image(systemName: data.isSelected ? "checkmark.circle" : "circle")
                                                    .symbolEffect(.bounce, value: data.isSelected)
                                            })
                                    }
                                }
                            }
                            FloatingActionButton(vm: vm, userInput: $searchText, searchtype: $searchSetting)
                        }
                    } else {
                        Spacer()
                        FloatingActionButton(vm: vm, userInput: $searchText, searchtype: $searchSetting)
                    }
                    
                    
                }
                Spacer()
                
            }.onChange(of: $vm.cves.count, {
                if($vm.cves.count != 0) {
                    navLinkVisible = true
                }
            })
            .navigationTitle("Search")
            .navigationBarTitleDisplayMode(hideToolbar ? .inline : .large)
            .toolbar {
                ToolbarItem {
                    Button(
                        action: {
                            withAnimation {
                                hideToolbar.toggle()
                            }
                        },
                        label: {
                            Image(systemName: hideToolbar ? "eye.slash" : "eye")
                        }
                    )
                }
            }
        }
    }
}

#Preview {
    SearchView()
}


