//
//  SettingsView.swift
//  CVE-Watch
//
//  Created by Niklas Demel on 14.11.23.
//

import SwiftUI

struct SettingsView: View {
    @ObservedObject var vm = SettingsVM()
    @State private var pickerSelection: MetricsVersion = .MetricsV2
    var body: some View {
        NavigationStack {
            ZStack {
                Color.cveBackground.ignoresSafeArea()
                VStack(alignment:.leading,spacing: 20) {
                    Section(header: Text("Metrics")
                        .fontWeight(.bold)
                        .opacity(0.5)) {
                        Picker("Metrics", selection: $pickerSelection) {
                            Text("MetricsV2").tag(MetricsVersion.MetricsV2)
                            Text("MetricsV30").tag(MetricsVersion.MetricsV30)
                            Text("MetricsV31").tag(MetricsVersion.MetricsV31)
                        }.onChange(of:pickerSelection) {
                            vm.setMetricsVersion(version: pickerSelection)
                        }
                        .pickerStyle(.segmented)
                        
                    }.padding(.horizontal)
                    
                    Divider()
                    ///TODO add alert
                    Section(header: Text("Usersettings")
                        .fontWeight(.bold)
                        .opacity(0.5)) {
                        Toggle("Notifictaion", isOn: $vm.notifictation)
                            .onChange(of: vm.notifictation, {vm.toggleNotifications()})
                        Button(role:.destructive) {
                            vm.deleteCVES()
                        } label: {
                            Text("Delete stored CVE'S")
                                .frame(maxWidth: .infinity, minHeight: 30)
                        }
                    }.padding(.horizontal)
                        .buttonStyle(.bordered)
                    
                    Divider()
                    
                    Section(header: Text("Info").fontWeight(.bold).opacity(0.5)) {
                        Button(action: {
                            NotificationHelper().requestPermission()
                        },
                               label: {
                            Text("Request Permission")
                                .frame(maxWidth: .infinity, minHeight: 30)
                        })
                        Button(action: {
                            NotificationHelper().testNotificationTrigger()
                        },
                               label: {
                            Text("Trigger")
                                .frame(maxWidth: .infinity, minHeight: 30)
                        })
                        NavigationLink(destination: AboutView()) {
                            HStack {
                                Text("About this app")
                                Image(systemName: "questionmark.circle")
                            }.frame(maxWidth: .infinity, minHeight: 30)
                            //TODO: maybe us sheet
                        }
                    }.buttonStyle(.bordered)
                    .padding(.horizontal)
                    Spacer()
                }.padding()
                .navigationTitle("Settings")
            }
        }.onAppear {
            pickerSelection = vm.selectedMetric
            vm.loadSettings()
        }
    }
}

#Preview {
    SettingsView()
}
