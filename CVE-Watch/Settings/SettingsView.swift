//
//  SettingsView.swift
//  CVE-Watch
//
//  Created by Niklas Demel on 14.11.23.
//

import SwiftUI

struct SettingsView: View {
    @ObservedObject var vm = SettingsVM()
    @State private var pickerSelection: MetricsVersion = .MetricsV2
    @State private var notifictation = false
    var body: some View {
        NavigationStack {
            ZStack {
                Color.cveBackground.ignoresSafeArea()
                VStack(alignment:.leading) {
                    Section(header: Text("Metrics")) {
                        Picker("Metrics", selection: $pickerSelection) {
                            Text("MetricsV2").tag(MetricsVersion.MetricsV2)
                            Text("MetricsV30").tag(MetricsVersion.MetricsV30)
                            Text("MetricsV31").tag(MetricsVersion.MetricsV31)
                        }.onChange(of:pickerSelection) {
                            vm.setMetricsVersion(version: pickerSelection)
                        }
                        .pickerStyle(.segmented)
                        
                    }.padding(.horizontal)
                    Spacer()
                    ///TODO add alert
                    Section(header: Text("Usersettings")) {
                        Toggle("Notifictaion", isOn: $notifictation)
                        Button(role:.destructive) {
                            vm.deleteCVES()
                        } label: {
                            Text("Delete stored CVE'S")
                        }
                    }.padding(.horizontal)
                        .buttonStyle(.bordered)
                    Spacer()
                    Section(header: Text("Info")) {
                        NavigationLink(destination: AboutView()) {
                            Text("About this app")
                            //TODO: maybe us sheet
                        }
                    }.padding(.horizontal)
                    Spacer()
                }.navigationTitle("Settings")
            }
        }.onAppear {
            pickerSelection = vm.selectedMetric
            vm.loadSettings()
        }
    }
}

#Preview {
    SettingsView()
}
